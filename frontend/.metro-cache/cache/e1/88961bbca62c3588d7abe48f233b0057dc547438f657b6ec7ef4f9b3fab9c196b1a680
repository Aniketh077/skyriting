{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"formatINR\", {\n    enumerable: true,\n    get: function () {\n      return formatINR;\n    }\n  });\n  Object.defineProperty(exports, \"formatPriceRange\", {\n    enumerable: true,\n    get: function () {\n      return formatPriceRange;\n    }\n  });\n  /**\n   * Format price in Indian Rupees (INR)\n   * @param price - Price in USD (will be converted to INR) \n   * @returns Formatted price string with ₹ symbol\n   */\n  const formatINR = price => {\n    // Convert USD to INR (approximately 83 INR = 1 USD as of 2025)\n    const inrPrice = price * 83;\n\n    // Format with Indian numbering system (lakhs, crores)\n    return `₹${inrPrice.toLocaleString('en-IN', {\n      maximumFractionDigits: 0,\n      minimumFractionDigits: 0\n    })}`;\n  };\n\n  /**\n   * Format price range for filters\n   */\n  const formatPriceRange = (min, max) => {\n    if (!max) {\n      return `Under ${formatINR(min)}`;\n    }\n    return `${formatINR(min)} - ${formatINR(max)}`;\n  };\n});","lineCount":44,"map":[[7,2,6,0,"Object"],[7,8,6,0],[7,9,6,0,"defineProperty"],[7,23,6,0],[7,24,6,0,"exports"],[7,31,6,0],[8,4,6,0,"enumerable"],[8,14,6,0],[9,4,6,0,"get"],[9,7,6,0],[9,18,6,0,"get"],[9,19,6,0],[10,6,6,0],[10,13,6,0,"formatINR"],[10,22,6,0],[11,4,6,0],[12,2,6,0],[13,2,20,0,"Object"],[13,8,20,0],[13,9,20,0,"defineProperty"],[13,23,20,0],[13,24,20,0,"exports"],[13,31,20,0],[14,4,20,0,"enumerable"],[14,14,20,0],[15,4,20,0,"get"],[15,7,20,0],[15,18,20,0,"get"],[15,19,20,0],[16,6,20,0],[16,13,20,0,"formatPriceRange"],[16,29,20,0],[17,4,20,0],[18,2,20,0],[19,2,1,0],[20,0,2,0],[21,0,3,0],[22,0,4,0],[23,0,5,0],[24,2,6,7],[24,8,6,13,"formatINR"],[24,17,6,22],[24,20,6,26,"price"],[24,25,6,39],[24,29,6,52],[25,4,7,2],[26,4,8,2],[26,10,8,8,"inrPrice"],[26,18,8,16],[26,21,8,19,"price"],[26,26,8,24],[26,29,8,27],[26,31,8,29],[28,4,10,2],[29,4,11,2],[29,11,11,9],[29,15,11,13,"inrPrice"],[29,23,11,21],[29,24,11,22,"toLocaleString"],[29,38,11,36],[29,39,11,37],[29,46,11,44],[29,48,11,46],[30,6,12,4,"maximumFractionDigits"],[30,27,12,25],[30,29,12,27],[30,30,12,28],[31,6,13,4,"minimumFractionDigits"],[31,27,13,25],[31,29,13,27],[32,4,14,2],[32,5,14,3],[32,6,14,4],[32,8,14,6],[33,2,15,0],[33,3,15,1],[35,2,17,0],[36,0,18,0],[37,0,19,0],[38,2,20,7],[38,8,20,13,"formatPriceRange"],[38,24,20,29],[38,27,20,32,"formatPriceRange"],[38,28,20,33,"min"],[38,31,20,44],[38,33,20,46,"max"],[38,36,20,58],[38,41,20,71],[39,4,21,2],[39,8,21,6],[39,9,21,7,"max"],[39,12,21,10],[39,14,21,12],[40,6,22,4],[40,13,22,11],[40,22,22,20,"formatINR"],[40,31,22,29],[40,32,22,30,"min"],[40,35,22,33],[40,36,22,34],[40,38,22,36],[41,4,23,2],[42,4,24,2],[42,11,24,9],[42,14,24,12,"formatINR"],[42,23,24,21],[42,24,24,22,"min"],[42,27,24,25],[42,28,24,26],[42,34,24,32,"formatINR"],[42,43,24,41],[42,44,24,42,"max"],[42,47,24,45],[42,48,24,46],[42,50,24,48],[43,2,25,0],[43,3,25,1],[44,0,25,2],[44,3]],"functionMap":{"names":["<global>","formatINR","formatPriceRange"],"mappings":"AAA;yBCK;CDS;gCEK;CFK"},"hasCjsExports":false},"type":"js/module"}]}